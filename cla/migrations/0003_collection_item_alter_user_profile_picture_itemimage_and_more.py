# Generated by Django 4.2.19 on 2025-02-26 18:05

import cla.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('cla', '0002_user_profile_picture'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('identifier', models.CharField(help_text='Unique key, barcode, QR code, ISBN, etc.', max_length=50, unique=True)),
                ('status', models.CharField(choices=[('checked_in', 'Checked In'), ('in_use', 'In Use'), ('being_repaired', 'Being Repaired'), ('reserved', 'Reserved')], default='checked_in', max_length=20)),
                ('location', models.CharField(help_text='Library location (e.g., Home Library, Work Library).', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='item_images/', validators=[cla.models.validate_image])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterField(
            model_name='user',
            name='profile_picture',
            field=models.ImageField(blank=True, default='profilepics/default.jpg', null=True, upload_to='profilepics/', validators=[cla.models.validate_image]),
        ),
        migrations.CreateModel(
            name='ItemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='item_images/', validators=[cla.models.validate_image])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_images', to='cla.item')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='added_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='item',
            name='collections',
            field=models.ManyToManyField(blank=True, related_name='items_in_collection', to='cla.collection'),
        ),
        migrations.AddField(
            model_name='item',
            name='uploaded_images',
            field=models.ManyToManyField(blank=True, related_name='item_uploaded_images', to='cla.itemimage'),
        ),
        migrations.AddField(
            model_name='collection',
            name='allowed_users',
            field=models.ManyToManyField(blank=True, help_text='Users allowed to access this private collection. Librarians can see all collections.', related_name='private_collections', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='items',
            field=models.ManyToManyField(blank=True, related_name='collections_in', to='cla.item'),
        ),
    ]
